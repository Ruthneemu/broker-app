{"ast":null,"code":"// AuthContext.js\nimport React,{createContext,useContext,useEffect,useState}from'react';import{createClient}from'@supabase/supabase-js';// Create Supabase client directly in this file\nimport{jsx as _jsx}from\"react/jsx-runtime\";const supabaseUrl='https://ouscjkmgdsnzakairivo.supabase.co';const supabaseAnonKey='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im91c2Nqa21nZHNuemFrYWlyaXZvIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTU5MzY0MzYsImV4cCI6MjA3MTUxMjQzNn0.ii49ymR7Bi7WZTYOkYnE1-kJIlZ7DV5xR_tM3kbX-MU';export const supabase=createClient(supabaseUrl,supabaseAnonKey);const AuthContext=/*#__PURE__*/createContext();// Custom hook to use the auth context\nexport function useAuth(){return useContext(AuthContext);}export function AuthProvider(_ref){let{children}=_ref;const[user,setUser]=useState(null);const[isAdmin,setIsAdmin]=useState(false);const[loading,setLoading]=useState(true);useEffect(()=>{const checkUser=async()=>{setLoading(true);const{data:{user}}=await supabase.auth.getUser();if(user){setUser(user);// Check if user is admin\nconst{data:profile}=await supabase.from('profiles').select('role').eq('id',user.id).single();setIsAdmin((profile===null||profile===void 0?void 0:profile.role)==='admin');}else{setUser(null);setIsAdmin(false);}setLoading(false);};checkUser();const{data:authListener}=supabase.auth.onAuthStateChange(async(event,session)=>{if(event==='SIGNED_IN'){setUser(session.user);// Check if user is admin\nconst{data:profile}=await supabase.from('profiles').select('role').eq('id',session.user.id).single();setIsAdmin((profile===null||profile===void 0?void 0:profile.role)==='admin');}else if(event==='SIGNED_OUT'){setUser(null);setIsAdmin(false);}});return()=>{authListener.subscription.unsubscribe();};},[]);// Add a signOut function that properly clears state\nconst signOut=async()=>{await supabase.auth.signOut();setUser(null);setIsAdmin(false);};const value={user,isAdmin,loading,signOut};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:value,children:children});}","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","createClient","jsx","_jsx","supabaseUrl","supabaseAnonKey","supabase","AuthContext","useAuth","AuthProvider","_ref","children","user","setUser","isAdmin","setIsAdmin","loading","setLoading","checkUser","data","auth","getUser","profile","from","select","eq","id","single","role","authListener","onAuthStateChange","event","session","subscription","unsubscribe","signOut","value","Provider"],"sources":["C:/Users/HJJJJJJJJJJJJJJJJJJJ/broker/broker-app/admin/src/AuthContext.js"],"sourcesContent":["// AuthContext.js\r\nimport React, { createContext, useContext, useEffect, useState } from 'react';\r\nimport { createClient } from '@supabase/supabase-js';\r\n\r\n// Create Supabase client directly in this file\r\nconst supabaseUrl = 'https://ouscjkmgdsnzakairivo.supabase.co';\r\nconst supabaseAnonKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im91c2Nqa21nZHNuemFrYWlyaXZvIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTU5MzY0MzYsImV4cCI6MjA3MTUxMjQzNn0.ii49ymR7Bi7WZTYOkYnE1-kJIlZ7DV5xR_tM3kbX-MU';\r\nexport const supabase = createClient(supabaseUrl, supabaseAnonKey);\r\n\r\nconst AuthContext = createContext();\r\n\r\n// Custom hook to use the auth context\r\nexport function useAuth() {\r\n  return useContext(AuthContext);\r\n}\r\n\r\nexport function AuthProvider({ children }) {\r\n  const [user, setUser] = useState(null);\r\n  const [isAdmin, setIsAdmin] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const checkUser = async () => {\r\n      setLoading(true);\r\n      const { data: { user } } = await supabase.auth.getUser();\r\n      if (user) {\r\n        setUser(user);\r\n        // Check if user is admin\r\n        const { data: profile } = await supabase\r\n          .from('profiles')\r\n          .select('role')\r\n          .eq('id', user.id)\r\n          .single();\r\n        setIsAdmin(profile?.role === 'admin');\r\n      } else {\r\n        setUser(null);\r\n        setIsAdmin(false);\r\n      }\r\n      setLoading(false);\r\n    };\r\n\r\n    checkUser();\r\n\r\n    const { data: authListener } = supabase.auth.onAuthStateChange(\r\n      async (event, session) => {\r\n        if (event === 'SIGNED_IN') {\r\n          setUser(session.user);\r\n          // Check if user is admin\r\n          const { data: profile } = await supabase\r\n            .from('profiles')\r\n            .select('role')\r\n            .eq('id', session.user.id)\r\n            .single();\r\n          setIsAdmin(profile?.role === 'admin');\r\n        } else if (event === 'SIGNED_OUT') {\r\n          setUser(null);\r\n          setIsAdmin(false);\r\n        }\r\n      }\r\n    );\r\n\r\n    return () => {\r\n      authListener.subscription.unsubscribe();\r\n    };\r\n  }, []);\r\n\r\n  // Add a signOut function that properly clears state\r\n  const signOut = async () => {\r\n    await supabase.auth.signOut();\r\n    setUser(null);\r\n    setIsAdmin(false);\r\n  };\r\n\r\n  const value = {\r\n    user,\r\n    isAdmin,\r\n    loading,\r\n    signOut,\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n}"],"mappings":"AAAA;AACA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,UAAU,CAAEC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAC7E,OAASC,YAAY,KAAQ,uBAAuB,CAEpD;AAAA,OAAAC,GAAA,IAAAC,IAAA,yBACA,KAAM,CAAAC,WAAW,CAAG,0CAA0C,CAC9D,KAAM,CAAAC,eAAe,CAAG,kNAAkN,CAC1O,MAAO,MAAM,CAAAC,QAAQ,CAAGL,YAAY,CAACG,WAAW,CAAEC,eAAe,CAAC,CAElE,KAAM,CAAAE,WAAW,cAAGV,aAAa,CAAC,CAAC,CAEnC;AACA,MAAO,SAAS,CAAAW,OAAOA,CAAA,CAAG,CACxB,MAAO,CAAAV,UAAU,CAACS,WAAW,CAAC,CAChC,CAEA,MAAO,SAAS,CAAAE,YAAYA,CAAAC,IAAA,CAAe,IAAd,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACvC,KAAM,CAACE,IAAI,CAAEC,OAAO,CAAC,CAAGb,QAAQ,CAAC,IAAI,CAAC,CACtC,KAAM,CAACc,OAAO,CAAEC,UAAU,CAAC,CAAGf,QAAQ,CAAC,KAAK,CAAC,CAC7C,KAAM,CAACgB,OAAO,CAAEC,UAAU,CAAC,CAAGjB,QAAQ,CAAC,IAAI,CAAC,CAE5CD,SAAS,CAAC,IAAM,CACd,KAAM,CAAAmB,SAAS,CAAG,KAAAA,CAAA,GAAY,CAC5BD,UAAU,CAAC,IAAI,CAAC,CAChB,KAAM,CAAEE,IAAI,CAAE,CAAEP,IAAK,CAAE,CAAC,CAAG,KAAM,CAAAN,QAAQ,CAACc,IAAI,CAACC,OAAO,CAAC,CAAC,CACxD,GAAIT,IAAI,CAAE,CACRC,OAAO,CAACD,IAAI,CAAC,CACb;AACA,KAAM,CAAEO,IAAI,CAAEG,OAAQ,CAAC,CAAG,KAAM,CAAAhB,QAAQ,CACrCiB,IAAI,CAAC,UAAU,CAAC,CAChBC,MAAM,CAAC,MAAM,CAAC,CACdC,EAAE,CAAC,IAAI,CAAEb,IAAI,CAACc,EAAE,CAAC,CACjBC,MAAM,CAAC,CAAC,CACXZ,UAAU,CAAC,CAAAO,OAAO,SAAPA,OAAO,iBAAPA,OAAO,CAAEM,IAAI,IAAK,OAAO,CAAC,CACvC,CAAC,IAAM,CACLf,OAAO,CAAC,IAAI,CAAC,CACbE,UAAU,CAAC,KAAK,CAAC,CACnB,CACAE,UAAU,CAAC,KAAK,CAAC,CACnB,CAAC,CAEDC,SAAS,CAAC,CAAC,CAEX,KAAM,CAAEC,IAAI,CAAEU,YAAa,CAAC,CAAGvB,QAAQ,CAACc,IAAI,CAACU,iBAAiB,CAC5D,MAAOC,KAAK,CAAEC,OAAO,GAAK,CACxB,GAAID,KAAK,GAAK,WAAW,CAAE,CACzBlB,OAAO,CAACmB,OAAO,CAACpB,IAAI,CAAC,CACrB;AACA,KAAM,CAAEO,IAAI,CAAEG,OAAQ,CAAC,CAAG,KAAM,CAAAhB,QAAQ,CACrCiB,IAAI,CAAC,UAAU,CAAC,CAChBC,MAAM,CAAC,MAAM,CAAC,CACdC,EAAE,CAAC,IAAI,CAAEO,OAAO,CAACpB,IAAI,CAACc,EAAE,CAAC,CACzBC,MAAM,CAAC,CAAC,CACXZ,UAAU,CAAC,CAAAO,OAAO,SAAPA,OAAO,iBAAPA,OAAO,CAAEM,IAAI,IAAK,OAAO,CAAC,CACvC,CAAC,IAAM,IAAIG,KAAK,GAAK,YAAY,CAAE,CACjClB,OAAO,CAAC,IAAI,CAAC,CACbE,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CACF,CAAC,CAED,MAAO,IAAM,CACXc,YAAY,CAACI,YAAY,CAACC,WAAW,CAAC,CAAC,CACzC,CAAC,CACH,CAAC,CAAE,EAAE,CAAC,CAEN;AACA,KAAM,CAAAC,OAAO,CAAG,KAAAA,CAAA,GAAY,CAC1B,KAAM,CAAA7B,QAAQ,CAACc,IAAI,CAACe,OAAO,CAAC,CAAC,CAC7BtB,OAAO,CAAC,IAAI,CAAC,CACbE,UAAU,CAAC,KAAK,CAAC,CACnB,CAAC,CAED,KAAM,CAAAqB,KAAK,CAAG,CACZxB,IAAI,CACJE,OAAO,CACPE,OAAO,CACPmB,OACF,CAAC,CAED,mBACEhC,IAAA,CAACI,WAAW,CAAC8B,QAAQ,EAACD,KAAK,CAAEA,KAAM,CAAAzB,QAAA,CAChCA,QAAQ,CACW,CAAC,CAE3B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}